// Generated by the Tensor Algebra Compiler (tensor-compiler.org)

int compute(taco_tensor_t *a, taco_tensor_t *B, taco_tensor_t *c) {
  int a1_dimension = (int)(a->dimensions[0]);
  double* restrict a_vals = (double*)(a->vals);
  int B1_dimension = (int)(B->dimensions[0]);
  int* restrict B2_pos = (int*)(B->indices[1][0]);
  int* restrict B2_crd = (int*)(B->indices[1][1]);
  double* restrict B_vals = (double*)(B->vals);
  int c1_dimension = (int)(c->dimensions[0]);
  double* restrict c_vals = (double*)(c->vals);

  #pragma omp parallel for schedule(static)
  for (int32_t pa = 0; pa < a1_dimension; pa++) {
    a_vals[pa] = 0.0;
  }

  #pragma omp parallel for schedule(runtime, 1)
  for (int32_t i = 0; i < B1_dimension; i++) {
    for (int32_t jB = B2_pos[i]; jB < B2_pos[(i + 1)]; jB++) {
      int32_t j = B2_crd[jB];
      a_vals[i] = a_vals[i] + B_vals[jB] * c_vals[j];
    }
  }
  return 0;
}

